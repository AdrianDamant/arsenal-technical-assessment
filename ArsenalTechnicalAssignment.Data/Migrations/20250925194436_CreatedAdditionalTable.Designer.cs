// <auto-generated />
using System;
using ArsenalTechnicalAssignment.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArsenalTechnicalAssignment.Data.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20250925194436_CreatedAdditionalTable")]
    partial class CreatedAdditionalTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArsenalTechnicalAssignment.Data.Data.Models.Fixture", b =>
                {
                    b.Property<Guid>("FixtureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AwayFootballClubId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FixtureDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HomeFootballClubId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FixtureId");

                    b.HasIndex("AwayFootballClubId");

                    b.HasIndex("HomeFootballClubId");

                    b.ToTable("Fixtures");
                });

            modelBuilder.Entity("ArsenalTechnicalAssignment.Data.Data.Models.FootballClub", b =>
                {
                    b.Property<Guid>("FootballClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoachName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FootballClubId");

                    b.ToTable("FootballClubs");
                });

            modelBuilder.Entity("ArsenalTechnicalAssignment.Data.Data.Models.Player", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("GoalsScored")
                        .HasColumnType("int");

                    b.Property<int>("JerseyNumber")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ArsenalTechnicalAssignment.Data.Data.Models.Result", b =>
                {
                    b.Property<Guid>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AwayTeamGoals")
                        .HasColumnType("int");

                    b.Property<Guid>("FixtureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HomeTeamGoals")
                        .HasColumnType("int");

                    b.HasKey("ResultId");

                    b.HasIndex("FixtureId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("ArsenalTechnicalAssignment.Data.Data.Models.Fixture", b =>
                {
                    b.HasOne("ArsenalTechnicalAssignment.Data.Data.Models.FootballClub", "AwayFootballClub")
                        .WithMany()
                        .HasForeignKey("AwayFootballClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArsenalTechnicalAssignment.Data.Data.Models.FootballClub", "HomeFootballClub")
                        .WithMany()
                        .HasForeignKey("HomeFootballClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AwayFootballClub");

                    b.Navigation("HomeFootballClub");
                });

            modelBuilder.Entity("ArsenalTechnicalAssignment.Data.Data.Models.Result", b =>
                {
                    b.HasOne("ArsenalTechnicalAssignment.Data.Data.Models.Fixture", "Fixture")
                        .WithMany()
                        .HasForeignKey("FixtureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fixture");
                });
#pragma warning restore 612, 618
        }
    }
}
